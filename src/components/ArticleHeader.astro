---
import getFullEntryDefinition from "@lib/keystatic/getFullEntryDefinition";
import Box from "@components/Box.astro";
import { Image } from "astro:assets";

interface Props {
  entryDefinition: Awaited<ReturnType<typeof getFullEntryDefinition>>;
}

const { entryDefinition } = Astro.props;
const { cmsEntry, coverImage, tags, collectionLabel } = entryDefinition;
---

<Box prose="prose-80" class="[&>*]:mx-auto bg-brand-300 !rounded-3xl shadow-2xl shadow-brand-300/50">
  <div class="tags">
    <a href="/corea-del-sud/">{collectionLabel}</a>
    {tags?.map((tag) => <a>{tag.name}</a>)}
  </div>
  <h1 class="mb-12">{cmsEntry.title}</h1>
  <p>{cmsEntry.excerpt}</p>
</Box>

<Box padding="sm" prose="prose-w-full" class="max-w-[105ch] mx-auto">
  {
    coverImage?.object && (
      <picture>
        <Image src={coverImage.object} alt={coverImage.alt} class="rounded" />

        <figcaption>
          Immagine: {coverImage.attribution.author} da {coverImage.attribution.source}
        </figcaption>
      </picture>
    )
  }
</Box>

<style>
  .tags {
    @apply space-x-1 mb-2 py-2 rounded-lg w-fit;
    @apply text-lg tracking-tight font-semibold;

    a {
      @apply !text-neutral-900;
      @apply !decoration-brand-500 !decoration-2 hover:text-link-900 hover:!decoration-link-900;

      /* Add a comma at the end of each element */
      &:not(:last-child) {
        &::after {
          content: ",";
        }
      }
    }
  }
</style>
