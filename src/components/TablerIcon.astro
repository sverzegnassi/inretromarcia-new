---
import type { HTMLAttributes } from "astro/types";
import { parse } from "node-html-parser";

interface Props extends HTMLAttributes<"svg"> {
  // https://tabler.io/icons
  iconName: string;
  strokeWidth?: number;
}

export async function importIcon(iconName: string) {
  const tablerIcon = await import(`../../node_modules/@tabler/icons/icons/${iconName}.svg?raw`);
  return tablerIcon.default;
}

const { iconName, strokeWidth = 1.5, ...attrs } = Astro.props;

const icon = await importIcon(iconName);
const svg = parse(icon).querySelector("svg");

if (svg) {
  const a : Record<string, any> = attrs;
  
  Object.keys(a)
    .filter((k) => k == "class" || k.startsWith("data-") || k.startsWith("aria-") || k.startsWith("x-"))
    .forEach((k) => {
      svg?.setAttribute(k, a[k]);
    });

  svg.setAttribute("stroke-width", strokeWidth as unknown as string);
}
---

<Fragment set:html={svg} />
